<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Raid Assist Triggers</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName>Raid Assist Triggers</packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Raid Assist Triggers</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName>Raid Assist Triggers</packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Raid assist</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enemy list capture</name>
						<script>--With above regex trigger, the captured names are split up by the comma space and stored in a list
--If you start working with other cities or people that call this order list different, add another line and set to perl regex

if matches[2] == ra.Leader then									--Check if group lead called the order
  if matches[2] == gmcp.Comm.Channel.Text.talker 
    and string.find(gmcp.Comm.Channel.Text.text, " "..matches[2]..".") 
    and gmcp.Comm.Channel.Text.channel == "party" then
    ra.target_list = string.split(matches[3], ", ")
    
    --Set target to initial name, only if target is different from first name so it doesn't need to be called later 
    if target ~= ra.target_list[1] then
      target = ra.target_list[1]
      raiseEvent("RA Target Changed")
    end
    
    --Either auto enemies this captured list or sets that it still needs to be enemied
    if ra.Settings.SetEnemy == "Yep" then
    		ra.autoEnemyList()
    	else
    		ra.ListEnemied = "Nope"
    end
  end
end



</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\): (\w+) says, \"Target order is: (.+)\.\"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enemy list capture 2</name>
						<script>--With above regex trigger, the captured names are split up by the comma space and stored in a list
--If you start working with other cities or people that call this order list different, add another line and set to perl regex

if matches[2] == ra.Leader then									--Check if group lead called the order
  if matches[2] == gmcp.Comm.Channel.Text.talker 
    and string.find(gmcp.Comm.Channel.Text.text, " "..matches[2]..".") 
    and gmcp.Comm.Channel.Text.channel == "party" then
    ra.target_list = string.split(matches[5], ", ")
    
    --Set target to initial name, only if target is different from first name so it doesn't need to be called later 
    if target ~= ra.target_list[1] then
      target = ra.target_list[1]
      raiseEvent("RA Target Changed")
    end
    
    --Either auto enemies this captured list or sets that it still needs to be enemied
    if ra.Settings.SetEnemy == "Yep" then
    		ra.autoEnemyList()
    	else
    		ra.ListEnemied = "Nope"
    end
  end
end



</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\): (\w+) says, "I have (\d+) (\w+): (.*)."$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Slain by detect</name>
						<script>
--Capture most recently slain person
ra.slain = matches[2]
local slain = matches[2] 						--Added this extra var to work with since I was having trouble removing the first person to die during large death lists. Could be speed of generating the timers?


if table.contains(ra.SoulList, slain) then												--Added this check incase some how they were already on the Soul list, this removes them to not double them
	table.remove(ra.SoulList, table.index_of(ra.SoulList, slain))
end

table.insert(ra.SoulList, slain)

ra.SoulTimers[tostring(slain)] = tempTimer(45, function()
	table.remove(ra.SoulList, table.index_of(ra.SoulList, slain))
	killTimer(ra.SoulTimers[tostring(slain)])
	end)	


if target == ra.slain and ra.Settings.SetTarget then																	--Check if the person that died is your target and if you are switching targets!!	
		if table.contains(ra.bursted, ra.slain) then																						--Check if just finished bursting and removes the block
			table.remove(ra.bursted, table.index_of(ra.bursted, ra.slain))
		end
		cecho("\n\n\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;=====================&lt;black:green&gt;====&lt;black:OrangeRed&gt;==Target DIED!!!Target DIED!!!==&lt;black:green&gt;====&lt;LightSalmon:black&gt;=====================")
    cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;=====================&lt;black:green&gt;====&lt;black:OrangeRed&gt;==Target DIED!!!Target DIED!!!==&lt;black:green&gt;====&lt;LightSalmon:black&gt;=====================")
    cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;=====================&lt;black:green&gt;====&lt;black:OrangeRed&gt;==Target DIED!!!Target DIED!!!==&lt;black:green&gt;====&lt;LightSalmon:black&gt;=====================\n\n")

		tempTimer(0.7, [[ra.Burstcheck(tostring(ra.slain))]])																		--The half second delay on calling the target switch function is to ensure capturing of burst
		
		
	elseif target == ra.slain then	--Inform of death if not swapping targets
    	cecho("\n\n\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;=====================&lt;black:green&gt;====&lt;black:OrangeRed&gt;==Target DIED!!!Target DIED!!!==&lt;black:green&gt;====&lt;LightSalmon:black&gt;=====================")
    	cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;=====================&lt;black:green&gt;====&lt;black:OrangeRed&gt;==Target DIED!!!Target DIED!!!==&lt;black:green&gt;====&lt;LightSalmon:black&gt;=====================")
      cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;=====================&lt;black:green&gt;====&lt;black:OrangeRed&gt;==Target DIED!!!Target DIED!!!==&lt;black:green&gt;====&lt;LightSalmon:black&gt;=====================")
			cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;=====================&lt;black:green&gt;====&lt;black:OrangeRed&gt;==Target DIED!!!Target DIED!!!==&lt;black:green&gt;====&lt;LightSalmon:black&gt;=====================\n\n")
			
	elseif table.contains(ra.target_list, ra.slain) then 																			--Nice to know people on your target list but not currently your target are dying! 
		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;Someone on target list killed!!")
		 	
	
	elseif targetassist then											--Assess if slain is your group lead to help know you might not be getting more target calls and should switch to Setting targets yourself
  	if targetassist.groupLeader == ra.slain then
  		selectCurrentLine() setBold(true) bg("firebrick") fg("light_cyan") deselect() resetFormat()
  		cecho("&lt;yellow&gt;&lt;---------------------------&lt;black:red&gt;Leader died!!")
  	end
	elseif ra.Leader == ra.slain then		--ra.Leader is variable in the system. Add yours here (or don't)											
		selectCurrentLine() setBold(true) bg("firebrick") fg("light_cyan") deselect() resetFormat()
		cecho("&lt;yellow&gt;&lt;---------------------------&lt;black:red&gt;Leader died!!")
end  










		</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have slain (\w+)\.$</string>
							<string>^(\w+) has been slain by \w+\.$</string>
							<string>^Unable to withstand the arrow piercing \w+ chest, (\w+) stumbles to the ground, collapsing in a pool </string>
							<string>^(\w+)\'s body disintegrates and a ghostly spirit rises from the ashes\. The ghost cries out in pain as a body forms around \w+ that has .*\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Starbursted detect</name>
						<script>--Makes a separte bursted table that can be cross refed 
--Also checks burst tracking for your target- notifies for target burst personally
--Originally intended to stop removal of their name from target order- not doing that anyways now
--Also, this table used to only track bursting of those on target list, but people get attacked that aren't originally on the list, better to track everyone

local burst = matches[2]
table.insert(ra.bursted, burst)

--starts a timer for how long the name will be on the recently burested list to block autoremoval or target switching- unsure of the time, ?3 seconds?
ra.BurstTimers[tostring(burst)] = tempTimer(3.5, function()
	table.remove(ra.bursted, table.index_of(ra.bursted, burst))
	killTimer(ra.BurstTimers[tostring(burst)])
	end)	

--Strips them from the SoulList so they can stay targeted
if table.contains(ra.SoulList, burst) then
	table.remove(ra.SoulList, table.index_of(ra.SoulList, burst))
end



--Attempts to inform if your target is still alive
if target == matches[2] then
  cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;cyan&gt;---------------&lt;black:OrangeRed&gt;Target bursted&lt;cyan:black&gt;---------------")
  cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;cyan&gt;---------------&lt;black:OrangeRed&gt;Target bursted&lt;cyan:black&gt;---------------")
  cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;cyan&gt;---------------&lt;black:OrangeRed&gt;Target bursted&lt;cyan:black&gt;---------------")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A starburst tattoo flares and bathes (\w+) in red light\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>RA Full enemy list</name>
						<script>--Trigger is turned on when system is attempting to enemy individuals to assess if enemy list is full

cecho("\n&lt;OrangeRed&gt;(CombAtul:) &lt;SlateGrey&gt;Enemies &lt;IndianRed&gt;maxed!    &lt;SlateGrey&gt;Use zENEMY.")
ra.ListEnemied = "Nope"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have reached your maximum of \d+ allies\/enemies\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>RA Embraced death</name>
						<script>if table.contains(ra.SoulList, matches[2]) then
	table.remove(ra.SoulList, table.index_of(ra.SoulList, matches[2]))
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Seeing (?:his|her) situation to be hopeless, (\w+) embraces the cold clutches of death\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>RA Soul detection</name>
						<script>--These 

if table.contains(ra.InRoom, target) then
	if table.contains(ra.target_list, target) then
  	if not table.contains(ra.SoulList, target) then
  		table.insert(ra.SoulList, target)
  	
    	ra.SoulTimers[tostring(target)] = tempTimer(25, function()			--If you try to hit them and they can't be but are still in the Room List they might be a soul... Or a DAMN SERPENT! Screw EVADE! Heheh
    	table.remove(ra.SoulList, table.index_of(ra.SoulList, target))
    	killTimer(ra.SoulTimers[tostring(target)])
    	end)
  	end
  	
  	if ra.Settings.SetTarget then
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;---Target might be a soul!! Switching Targets---")
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;---Target might be a soul!! Switching Targets---")
  		ra.Burstcheck(tostring(target))	
  	else
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;---Target might be a soul!!---")
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;---Target might be a soul!!---")
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;---Target might be a soul!!---")
  	end
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You detect nothing here by that name.</string>
							<string>Nothing can be seen here by that name.</string>
							<string>You cannot see that being here.</string>
							<string>Ahh, I am truly sorry, but I do not see anyone by that name here.</string>
							<string>I do not recognise anything called that here.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Talking soul detection</name>
						<script>if not table.contains(ra.SoulList, matches[2]) then
		table.insert(ra.SoulList, matches[2])
	
  	ra.SoulTimers[tostring(matches[2])] = tempTimer(25, function()
	table.remove(ra.SoulList, table.index_of(ra.SoulList, matches[2]))
	killTimer(ra.SoulTimers[tostring(matches[2])])
	end)	
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The soul of (\w+) says</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>BW capture</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Name capture</name>
							<script>setTriggerStayOpen("BW capture", 6)

local names = string.gsub(matches[2], ", and", ",")

names = string.split(names, ", ")


for n, v in pairs (names) do
	if not table.contains(ra.target_list, v) then
		table.insert(ra.target_list, v)
		--ra.autoEnemy(v)																	Removed both because it was too spammy--
		--cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;SlateGrey&gt; Added: &lt;IndianRed&gt;"..v)
	end
end
cecho("\n&lt;OrangeRed&gt;(CombAtul):&lt;SlateGrey&gt; Added city to target order- &lt;lemon_chiffon&gt;zENEMY &lt;SlateGrey&gt;to enemy")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(((\w+), )*and (\w+))\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>BW close</name>
							<script>setTriggerStayOpen("BW capture", 0)
disableTrigger("BW capture")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Plus another \d+ whose presence you cannot</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>BW close</name>
							<script>--added incase miss spelled city for now and doesn't run BW to detect the presence of people line- instead prompt kills
setTriggerStayOpen("BW capture", 0)
disableTrigger("BW capture")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Opponent movement</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Target left the room</name>
							<script>--cecho("\&lt;green&gt;\nDebug- fired")
if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) leaps majestically to the (\w+)\.$</string>
								<string>^(\w+) flies away to the beyond\.$</string>
								<string>^A look of purest love crosses (\w+)'s face, and (\w+) is summoned away\.$</string>
								<string>^(\w+) steps through a sewer grate and is gone\.$</string>
								<string>^(\w+), riding a (.*), gathers the reins and jumps off to the (\w+)\.$</string>
								<string>^You hear the distant whinny of a wild horse, and (\w+) is gone\.$</string>
								<string>^(\w+), riding a (.*), gallops off to the (\w+)\.$</string>
								<string>^(\w+)'s somersault takes (?:him|her) out of the room to the (\w+)\.$</string>
								<string>^(\w+) does a back handspring to the (\w+), striking you with (?:his|her) feet on the way out\.$</string>
								<string>^(\w+) flips out to the (\w+)\.$</string>
								<string>^(\w+) gathers (?:his|her) legs under (?:him|her) and backflips out to the (\w+).$</string>
								<string>^(\w+) departs to the (\w+), leaving a blaze of heated air in (?:her|his) wake\.$</string>
								<string>^(\w+) moves (?:her|his) huge bulk to the (\w+) with surprising grace\.$</string>
								<string>^(\w+) leaves to the (\w+)\.$</string>
								<string>^(\w+) reaches out and touches (.*) upon the map, and melts effortlessly into the image\.$</string>
								<string>^(\w+) flings a tarot to the ground. Upon contact, it explodes in a great flash of technicolour light and (\w+) is gone\.$</string>
								<string>^A large, rectangular gateway opens up near you, and as you hear the laughing voice of \w+\, (\w+) is drawn through\.$</string>
								<string>^(\w+) suddenly winks out of the room, summoned by the power of \w+\.$</string>
								<string>^(\w+) vanishes to the \w+\, the surroundings seeming to shift in (her|his) wake\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Started tumble</name>
							<script>if matches[2] == target then
	cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;===========&lt;LightSalmon:MidnightBlue&gt;Target Started Tumble!&lt;LightSalmon:black&gt;===========")
	cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;===========&lt;LightSalmon:MidnightBlue&gt;Target Started Tumble!&lt;LightSalmon:black&gt;===========")
  cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;===========&lt;LightSalmon:MidnightBlue&gt;Target Started Tumble!&lt;LightSalmon:black&gt;===========")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) begins to tumble towards the (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Target not here!</name>
							<script>--These 

if lastCommands[1]:find(target:lower()) or lastCommands[2]:find(target:lower()) then	
  if not table.contains(ra.InRoom, target) then
  	cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;black:OrangeRed&gt;===================Target likely left!===================&lt;black:DarkViolet&gt;Target not here")
  	cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;black:OrangeRed&gt;===================Target likely left!===================&lt;black:DarkViolet&gt;Target not here")
  	cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;black:OrangeRed&gt;===================Target likely left!===================&lt;black:DarkViolet&gt;Target not here")
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You detect nothing here by that name.</string>
								<string>Nothing can be seen here by that name.</string>
								<string>You cannot see that being here.</string>
								<string>Ahh, I am truly sorry, but I do not see anyone by that name here.</string>
								<string>I do not recognise anything called that here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>begins to somersault towards the west.</name>
							<script>if matches[2] == target then
	cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;===========&lt;LightSalmon:MidnightBlue&gt;Target Started Tumble!&lt;LightSalmon:black&gt;===========")
	cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;===========&lt;LightSalmon:MidnightBlue&gt;Target Started Tumble!&lt;LightSalmon:black&gt;===========")
  cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;LightSalmon&gt;===========&lt;LightSalmon:MidnightBlue&gt;Target Started Tumble!&lt;LightSalmon:black&gt;===========")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) begins to somersault towards the (\w+).</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wings</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) is swiftly carried into the skies and out of sight by .*\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Regular movement</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) leaves to the (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jester somersault</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s somersault takes (?:him|her) out of the room to the (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jester leave with hit</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) does a back handspring to the (\w+), striking you with (?:his|her) feet on the way out\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jester flip</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) flips out to the (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jester other flip</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) gathers (?:his|her) legs under (?:him|her) and backflips out to the (\w+).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Earring away</name>
							<script>
if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A look of purest love crosses (\w+)'s face, and (\w+) is summoned away\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>RoF</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) flies away to the beyond\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dragon left</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) departs to the (\w+), leaving a blaze of heated air in (?:her|his) wake\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dragon left 2</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) moves (?:her|his) huge bulk to the (\w+) with surprising grace\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Entered sewer</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) steps through a sewer grate and is gone\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mount Jump</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+), riding a (.+), gathers the reins and jumps off to the (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Raido home exit</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You hear the distant whinny of a wild horse, and (\w+) is gone\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gallop exit</name>
							<script>if matches[2] == target then
	ra.TargetLeftCheck()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+), riding a (.+), gallops off to the (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Room gag</name>
						<script>setTriggerStayOpen("Room gag", 900)

tempTimer(5, [[disableTrigger("Room gag")]]) --This temp timer is a backup to ensure this thing closes for the reason below 

--[[
When this doesn't get killed, there is no information coming through at all. zRESET contains additional reseting power
over this. Another alias - not in help description is zRE to reset just this and not target order.
--]]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>900</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>if RoomTitle() then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Soul filter</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>soul of (\w+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Add to soul list</name>
								<script>--This child trigger should take each name filtered to it and run adding them to the SoulList (Code below) for 25 seconds

if not table.contains(ra.SoulList, matches[2]) then
		table.insert(ra.SoulList, matches[2])
	
  	ra.SoulTimers[tostring(matches[2])] = tempTimer(25, function()
		table.remove(ra.SoulList, table.index_of(ra.SoulList, matches[2]))
		killTimer(ra.SoulTimers[tostring(matches[2])])
		end)	
end
cecho("\n&lt;OrangeRed&gt;(CombAtul):   &lt;LemonChiffon&gt;"..matches[2].."   &lt;grey&gt;is a soul!")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(\w+)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Delete room lines</name>
							<script>--This removes the spam from the room description after the lines have been process by above patter 
deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>.*</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stop (Room gag)</name>
							<script>--This closes everything up and runs the retargeting

setTriggerStayOpen("Room gag", 0)
ra.RoomTarget()
disableTrigger("Room gag")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Grace detection</name>
						<script>--If who you try to hit is also your target this will inform you and try to avoid them in auto target swapping
if matches[2] == target then
  if table.contains(ra.InRoom, target) then
  	if not table.contains(ra.SoulList, target) then
  		table.insert(ra.SoulList, target)
  	
    	ra.SoulTimers[tostring(target)] = tempTimer(10, function() --Ignored for 10 seconds with auto targeting
    	table.remove(ra.SoulList, table.index_of(ra.SoulList, target))
    	killTimer(ra.SoulTimers[tostring(target)])
    	end)
  	end
  	
  	if ra.Settings.SetTarget then
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;-------------Target graced!! Swapping-------------")
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;-------------Target graced!! Swapping-------------")
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;-------------Target graced!! Swapping-------------")
  		ra.Burstcheck(tostring(target))	
  	else
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;-------------Target graced!! SWITCH-------------")
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;-------------Target graced!! SWITCH-------------")
  		cecho("\n&lt;OrangeRed&gt;(CombAtul): &lt;yellow&gt;-------------Target graced!! SWITCH-------------")
  	end
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) walks in Divine Grace\. You may not harm (?:him|her)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>QW Target Check</name>
						<script>--Should start detection on QW
deleteLine()

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>100</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+)\, (\w+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Plus another delete</name>
							<script>--Deletes the one line for neatness
deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Plus another</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>QW detect names</name>
							<script>--This makes temp triggers for each name of the person in the list being loaded
--These temp triggers when they fire will add the name to a table to use later
--The loop stores the temptrigger ID's to delete them after qw to clean up

ra.NameCheck = {}
ra.TempTargetList2 = {}

for _, name in pairs(ra.TempTargetList) do
  ra.NameCheck[name] = tempTrigger(name, function() table.insert(ra.TempTargetList2, name) end, 1)
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)\, (\w+)</string>
								<string>and</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Close QW check</name>
							<script>--On prompt this shuts things down, and kills all the temptrigger names with their ID's
--Then it uses the list made with the temptriggers TempTargetList2 and compares to the one loaded
--This comparison and addition into the target list is just to ensure the target order is preserved

setTriggerStayOpen("QW Target Check", 0)

for _, id in pairs(ra.NameCheck) do 
	killTrigger(id) 
end

if ra.Settings.SetEnemy == "Yep" then		--If system is handling enemies this unenemies to prepare for change
		send("unenemy all")
end

ra.target_list = {}		--Clear the target order to prepare for new order


for n, v in pairs (ra.TempTargetList) do						--Ensures the list is ordered
  if table.contains(ra.TempTargetList2, v) then
		table.insert(ra.target_list, v)
	end
end

if ra.Settings.SetEnemy == "Yep" then 																					--checks if it should enemy the list
	ra.autoEnemyList()
end	

ra.TempTargetList = {}		--Clear these lists for clean up and later use. 
ra.TempTargetList2 = {}


disableTrigger("QW Target Check") --Turn it all off to not keep going</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>RA Target called</name>
						<script>-- if target called is already targeted, no switching or calling happens.
if matches[3] == target then return end

--Reflex to take the target that has been announced
if matches[2] == gmcp.Comm.Channel.Text.talker 
	and string.find(gmcp.Comm.Channel.Text.text, " "..matches[2]..".") 
	and gmcp.Comm.Channel.Text.channel == "party" then
    
    --if auto switching will switch and inform
    if ra.Settings.TargetSwitch == "auto" then
       --set RA target variable
       ra.ToTarget = matches[3]
        if table.contains(ra.InRoom, matches[3]) then
          ra.ToTarget = matches[3] 
          target = matches[3]
          --sets serversive target. comment out if not needed
          --send("settarget "..target, false)
          --if you have your own targeting alias or function, insert it below. native target alias is included in alias folders
          targeting(target)
          cecho("\n&lt;OrangeRed&gt;(CombatAtul):&lt;black:white&gt;=================== Target switched: "..target:upper().." ===================")
          cecho("\n&lt;OrangeRed&gt;(CombatAtul):&lt;black:white&gt;=================== Target switched: "..target:upper().." ===================")
          raiseEvent("RA Target Changed")
            
            -- this will echo your target switch in party is 'zLoud' is active
            if ra.Settings.OverRide == true then
              send("pt Target: "..target)
            else end
        
        else
  	  cecho("\n&lt;OrangeRed&gt;(CombatAtul): &lt;black:SpringGreen&gt;No enemies from target order in the room! &lt;black:cyan&gt;--&gt;Set your own!!")
          cecho("\n&lt;OrangeRed&gt;(CombatAtul): &lt;black:SpringGreen&gt;No enemies from target order in the room! &lt;black:cyan&gt;--&gt;Set your own!!")
        end
    
    --if you want to execute the switch- tells you target was switched and stores it in ToTarget for swap
    elseif ra.Settings.TargetSwitch == "manual" then
        ra.ToTarget = matches[3]
        cecho("\n&lt;OrangeRed&gt;(CombatAtul):&lt;black:white&gt;=================== Party Target is: "..ra.ToTarget:upper().." ===================")
        cecho("\n&lt;OrangeRed&gt;(CombatAtul):&lt;black:white&gt;=================== Party Target is: "..ra.ToTarget:upper().." ===================")
    else
      cecho("\n&lt;OrangeRed&gt;(CombatAtul): &lt;SpringGreen&gt;No enemies from target order found! &lt;cyan&gt;--&gt;Set your own!!")
      cecho("\n&lt;OrangeRed&gt;(CombatAtul): &lt;SpringGreen&gt;No enemies from target order found! &lt;cyan&gt;--&gt;Set your own!!")
    end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Party\): (\w+) says, \"(?:Target|Targeting|TARGETING|TARGET):? (\w+)\.\"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Party Gag</name>
						<script>--disable this trigger if you do not push party messages to a window
deleteFull()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>\(Party\)\: .+</string>
							<string>\(Party\)\: (\w+) says</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Aff Reporting</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prompt report</name>
							<script>-- needs updating but works for now
if ra.Settings.AffCalling and ra.aff_gate and ra.affs_to_report[1] then
  send("pt "..target.." afflicted with "..table.concat(ra.affs_to_report, " "))
end
ra.aff_gate = false
ra.affs_to_report = {}
-- revisit this!</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Start running</name>
							<script>ra.aff_gate = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>[System]: Running queued </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Party Aff Tracking</name>
						<script>-- Requires AK to use</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Party Calls</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 1</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[4])
  affstrack.score[aff] = 100
  --affstrack.score[affstrack.venoms[aff]] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"Afflicting (\w+) with: (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 1 v</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[4])
  --affstrack.score[aff] = 100
  affstrack.score[affstrack.venoms[aff]] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"Afflicting (\w+) with: (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 2</name>
								<script>if matches[4] == target then
  local aff = string.lower(matches[2])
  local aff1 = string.lower(matches[3])
  affstrack.score[aff] = 100
  --affstrack.score[affstrack.venoms[aff]] = 100
  affstrack.score[aff1] = 100
  --affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff)
  OppGainedAff(aff1)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"(\w+) and (\w+) on (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 2 v</name>
								<script>if matches[4] == target then
  local aff = string.lower(matches[2])
  local aff1 = string.lower(matches[3])
  --affstrack.score[aff] = 100
  affstrack.score[affstrack.venoms[aff]] = 100
  --affstrack.score[aff1] = 100
  affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff)
  OppGainedAff(aff1)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"(\w+) and (\w+) on (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 3</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[4])
  local aff1 = string.lower(matches[5])
  affstrack.score[aff] = 100
  --affstrack.score[affstrack.venoms[aff]] = 100
  affstrack.score[aff1] = 100
  --affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff)
  OppGainedAff(aff1)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+)\: (\w+) (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 3 v</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[4])
  local aff1 = string.lower(matches[5])
  --affstrack.score[aff] = 100
  affstrack.score[affstrack.venoms[aff]] = 100
  --affstrack.score[aff1] = 100
  affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff)
  OppGainedAff(aff1)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+)\: (\w+) (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 4</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[4])
  local aff1 = string.lower(matches[5])
  local aff2 = string.lower(matches[6])
  affstrack.score[aff] = 100
  --affstrack.score[affstrack.venoms[aff]] = 100
  affstrack.score[aff1] = 100
  --affstrack.score[affstrack.venoms[aff1]] = 100
  affstrack.score[aff2] = 100
  --affstrack.score[affstrack.venoms[aff2]] = 100
  OppGainedAff(aff)
  OppGainedAff(aff1)
  OppGainedAff(aff2)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+): (\w+) (\w+) (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 4 v</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[4])
  local aff1 = string.lower(matches[5])
  local aff2 = string.lower(matches[6])
  --affstrack.score[aff] = 100
  affstrack.score[affstrack.venoms[aff]] = 100
  --affstrack.score[aff1] = 100
  affstrack.score[affstrack.venoms[aff1]] = 100
  --affstrack.score[aff2] = 100
  affstrack.score[affstrack.venoms[aff2]] = 100
  OppGainedAff(aff)
  OppGainedAff(aff1)
  OppGainedAff(aff2)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+): (\w+) (\w+) (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 5</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[4])
  affstrack.score[aff] = 100
  --affstrack.score[affstrack.venoms[aff]] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+): (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 5 v</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[4])
  --affstrack.score[aff] = 100
  affstrack.score[affstrack.venoms[aff]] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+): (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 6</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[4])
  affstrack.score[aff] = 100
  --affstrack.score[affstrack.venoms[aff]] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+) hit with (\w+)\."$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 6 v</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[4])
--  affstrack.score[aff] = 100
  affstrack.score[affstrack.venoms[aff]] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+) hit with (\w+)\."$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 7</name>
								<script>if matches[3] == target then
  local aff1 = string.lower(matches[4])
  affstrack.score[aff1] = 100
  --affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff1)
  local aff2 = string.lower(matches[5])
  affstrack.score[aff2] = 100
  --affstrack.score[affstrack.venoms[aff2]] = 100
  OppGainedAff(aff2)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+) hit with (\w+) (\w+)\."$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 7 v</name>
								<script>if matches[3] == target then
  local aff1 = string.lower(matches[4])
  --affstrack.score[aff1] = 100
  affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff1)
  local aff2 = string.lower(matches[5])
  --affstrack.score[aff2] = 100
  affstrack.score[affstrack.venoms[aff2]] = 100
  OppGainedAff(aff2)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+) hit with (\w+) and (\w+)\."$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 8</name>
								<script>if matches[3] == target then
  local aff1 = string.lower(matches[4])
  affstrack.score[aff1] = 100
  --affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff1)
  local aff2 = string.lower(matches[5])
  affstrack.score[aff2] = 100
  --affstrack.score[affstrack.venoms[aff2]] = 100
  OppGainedAff(aff2)
  local aff2 = string.lower(matches[6])
  affstrack.score[aff2] = 100
  --affstrack.score[affstrack.venoms[aff3]] = 100
  OppGainedAff(aff3)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+) hit with (\w+) and (\w+) and (\w+)\."$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>3 aff hit v</name>
								<script>if matches[3] == target then
  local aff1 = string.lower(matches[4])
  --affstrack.score[aff1] = 100
  affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff1)
  local aff2 = string.lower(matches[5])
  --affstrack.score[aff2] = 100
  affstrack.score[affstrack.venoms[aff2]] = 100
  OppGainedAff(aff2)
  local aff3 = string.lower(matches[6])
  --affstrack.score[aff2] = 100
  affstrack.score[affstrack.venoms[aff3]] = 100
  OppGainedAff(aff3)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+) hit with (\w+) (\w+) (\w+)\."$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hit with 3 affs</name>
								<script>if matches[3] == target then
  local aff1 = string.lower(matches[4])
  affstrack.score[aff1] = 100
  --affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff1)
  local aff2 = string.lower(matches[5])
  affstrack.score[aff2] = 100
  --affstrack.score[affstrack.venoms[aff2]] = 100
  OppGainedAff(aff2)
  local aff3 = string.lower(matches[6])
  affstrack.score[aff2] = 100
  --affstrack.score[affstrack.venoms[aff3]] = 100
  OppGainedAff(aff3)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+) hit with (\w+) (\w+) (\w+)\."$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>BM strikes</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Para</name>
									<script>if matches[1] == target then
  local aff = "paralysis"
  affstrack.score.paralysis = 100
  OppGainedAff(aff)
  send("pt "..matches[1].." hit with paralysis.")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You begin reciting an epic tale of the heroism of Nicator to (\w+), holding her spellbound.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Weari</name>
									<script>if matches[2] == target then
  local aff = "weariness"
  affstrack.score.weariness = 100
  OppGainedAff(aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With a fluid motion, \w+ aims a blow just below (\w+)'s shoulder\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Asthma</name>
									<script>if matches[2] == target then
  local aff = "asthma"
  affstrack.score.asthma = 100
  OppGainedAff(aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With iron fingers, \w+ aims a darting strike at (\w+)'s throat\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hypo</name>
									<script>if matches[2] == target then
  local aff = "hypochondria"
  affstrack.score.hypochondria = 100
  OppGainedAff(aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With rapid precision, \w+ aims first a punch then a spearhand blow at two points on (\w+)'s chest\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Ano</name>
									<script>if matches[2] == target then
  local aff = "anorexia"
  affstrack.score.anorexia = 100
  OppGainedAff(aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\w+ aims a measured blow at (\w+)'s stomach, who flinches in response\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Slickness</name>
									<script>if matches[2] == target then
  local aff = "slickness"
  affstrack.score.slickness = 100
  OppGainedAff(aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^With a swift, snaking strike, \w+ thrusts upwards at (\w+)'s armpit\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Reck</name>
									<script>if matches[2] == target then
  local aff = "recklessness"
  affstrack.score.recklessness = 100
  OppGainedAff(aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Targeting a vulnerable point, \w+ lashes out at (\w+)'s groin with a calculated strike\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Stupidity</name>
									<script>if matches[2] == target then
  local aff = "stupidity"
  affstrack.score.stupidity = 100
  OppGainedAff(aff)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Striking \w+ temple with a clenched fist, \w+ leaves (\w+) reeling\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>imp</name>
									<script>if matches[2] == target then
send("pt "..target.." hit with Impatience.")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Composing a few clever lines in your head, you quickly sing a jaunty limerick at (\w+)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tarot call</name>
								<script>if matches[3] == target then
local aff1 = string.lower(matches[2])
affstrack.score[aff1] = 100
OppGainedAff(aff1)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) stands an \w+\ tarot on (his|her) open palm, and blows it lightly at \w+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hit with a few affs</name>
								<script>if matches[3] == target then
  local aff1 = string.lower(matches[4])
  affstrack.score[aff1] = 100
  --affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff1)
  local aff2 = string.lower(matches[5])
  affstrack.score[aff2] = 100
  --affstrack.score[affstrack.venoms[aff2]] = 100
  OppGainedAff(aff2)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"(\w+) hit with (\w+) and (\w+)\!"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hit with 2 affs v</name>
								<script>if matches[3] == target then
  local aff1 = string.lower(matches[4])
  --affstrack.score[aff1] = 100
  affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff1)
  local aff2 = string.lower(matches[5])
  --affstrack.score[aff2] = 100
  affstrack.score[affstrack.venoms[aff2]] = 100
  OppGainedAff(aff2)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"(\w+) hit with (\w+) and (\w+)\!"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>New dragon track</name>
								<script>local aff = matches[3]
tempTimer(1, function()OppGainedAff(aff)end)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"Dragoncursing (\w+) with\: (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dythesa call</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[2])
  affstrack.score[aff] = 100
  --affstrack.score[affstrack.venoms[aff]] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"(\w+) on (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dythesa call v</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[2])
  --affstrack.score[aff] = 100
  affstrack.score[affstrack.venoms[aff]] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"(\w+) on (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Defense calls</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Branch</name>
									<script>if matches[2] == target then
send("pt "..target.." has olivebranch!")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^The blow is robbed of all force as it enters the bubble of serenity surrounding (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tfix success call</name>
								<script>if matches[3] == target then
  local aff = string.lower(matches[2])
  --affstrack.score[aff] = 100
  affstrack.score.transfixed = 100
  OppGainedAff(transfixed)
  end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"Transfixed (\w+) successfully!\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call 2 affs</name>
								<script>if matches[2] == target then
  local aff = string.lower(matches[3])
  local aff1 = string.lower(matches[4])
  affstrack.score[aff] = 100
  --affstrack.score[affstrack.venoms[aff]] = 100
  affstrack.score[aff1] = 100
  --affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff)
  OppGainedAff(aff1)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"(\w+) afflicted with (\w+) (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call aff 2 affs v</name>
								<script>if matches[2] == target then
  local aff = string.lower(matches[3])
  local aff1 = string.lower(matches[4])
  affstrack.score[aff] = 100
  --affstrack.score[affstrack.venoms[aff]] = 100
  affstrack.score[aff1] = 100
  --affstrack.score[affstrack.venoms[aff1]] = 100
  OppGainedAff(aff)
  OppGainedAff(aff1)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"(\w+) afflicted with (\w+) (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Affliction Called</name>
								<script>--change this if you do not use AK for affliction tracking.
if IsTargetted(matches[3]) then
  local aff = string.lower(matches[4])
  affstrack.score[aff] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): (\w+) says, \"Afflicting (\w+) with: (\w+)\."$ </string>
									<string>^\(Party\): (\w+) says, \"Afflicting (\w+): (\w+)\."$</string>
									<string>^\(Party\): (\w+) says, \"Afflicted (\w+): (\w+)\."$</string>
									<string>^\(Party\): (\w+) says, \"(\w+) afflicted with: (\w+)\."$ </string>
									<string>^\(Party\): (\w+) says, \"(\w+) afflicted with (\w+)."$ </string>
									<string>^\(Party\): (\w+) says, \"(\w+) hit with: (\w+)\."$ </string>
									<string>^\(Party\): (\w+) says, \"(\w+): (\w+)."$ </string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call aff with</name>
								<script>if matches[2] == target then
  local aff = string.lower(matches[3])
  affstrack.score[aff] = 100
  --affstrack.score[affstrack.venoms[aff]] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"(\w+) afflicted with (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Call aff with v</name>
								<script>if matches[2] == target then
  local aff = string.lower(matches[3])
  --affstrack.score[aff] = 100
  affstrack.score[affstrack.venoms[aff]] = 100
  OppGainedAff(aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\(Party\): \w+ says, \"(\w+) afflicted with (\w+)\.\"$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wall Calls</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wall Down</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Icewall destroyed</name>
								<script>deleteLine()
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;DeepSkyBlue&gt; ICEWALL DOWN: &lt;white&gt;"..matches.exit:upper())
if (ra.IsLeader and ra.Settings.OverRide) or ra.IsLeader == "Me" then
send("pt Icewall "..matches.exit:upper().." down!")
end
--^An icewall quickly melts into nothingness.$</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You draw forth a card depicting Yudhishthira, The Red from your deck, raising it towards the (?&lt;exit&gt;\w+)\.$</string>
									<string>^You send a lash of fire to strike the icewall to the (?&lt;exit&gt;\w+), and it quickly melts.$</string>
									<string>^A blast of flame annihilates a wall of ice blocking the way (?&lt;exit&gt;\w+)\.$</string>
									<string>^(\w+) draws forth a card depicting Yudhishthira, The Red from his deck, raising it towards the (?&lt;exit&gt;\w+)\.$</string>
									<string>^The icewall to the (?&lt;exit&gt;\w+) quickly melts as (\w+) sends a lash of fire to scourge it.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Firewall destroyed</name>
								<script>deleteLine()
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;ansiLightRed&gt; FIREWALL DOWN: &lt;white&gt;"..matches.exit:upper())
if (ra.IsLeader and ra.Settings.OverRide) or ra.IsLeader == "Me" then
send("pt Firewall "..matches.exit:upper().." down!")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A wall of fire blocking the way (?&lt;exit&gt;\w+) vanishes in a hiss of steam.$</string>
									<string>^A wall of fire blocking the way (?&lt;exit&gt;\w+) is extinguished in a hiss of steam.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stonewall destroyed</name>
								<script>deleteLine()
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;grey&gt; STONEWALL DOWN: &lt;white&gt;"..matches[2])
if (ra.IsLeader and ra.Settings.OverRide) or ra.IsLeader == "Me" then
send("pt Stonewall "..matches.exit:upper().." down!")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A wall of rough stone to the (?&lt;exit&gt;\w+) fractures suddenly before collapsing.$</string>
									<string>^(\w+) whips (\w+) tail around, striking the wall to the (?&lt;exit&gt;\w+) with a powerful blow\. A network of fine fractures spreads over its surface before it suddenly collapses.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Icewall melted</name>
								<script>deleteLine()
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;DeepSkyBlue&gt; ICEWALL DOWN")
if (ra.IsLeader and ra.Settings.OverRide) or ra.IsLeader == "Me" then
send("pt Icewall melted!")
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^An icewall quickly melts into nothingness.$</string>
									<string>^The icewall quickly melts into nothingness.$</string>
									<string>^(\w+) flicks a finger in the direction of a large wall of ice, and it instantly explodes into scalding steam.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wall Raised</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Thornwalled</name>
								<script>deleteLine()
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;ForestGreen&gt; THORNWALL RAISED: &lt;white&gt;"..matches.exit:upper())
if (ra.IsLeader and ra.Settings.OverRide) or ra.IsLeader == "Me" then
send("pt Thornwall raised: "..matches.exit:upper())
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A wall of thorns rises up to the (?&lt;exit&gt;\w+), wicked barbs ready to pierce the flesh of the unwary.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Icewalled</name>
								<script>deleteLine()
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;DeepSkyBlue&gt; ICEWALL RAISED: &lt;white&gt;"..matches.exit:upper())
if (ra.IsLeader and ra.Settings.OverRide) or ra.IsLeader == "Me" then
send("pt Icewall raised: "..matches.exit:upper())
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#fc02ff</mFgColor>
								<mBgColor>#0000ff</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^An icewall suddenly forms to the (?&lt;exit&gt;\w+)\.$</string>
									<string>^You raise your hands dramatically and summon an icewall to the (?&lt;exit&gt;\w+)\.$</string>
									<string>^(\w+) raises (\w+) hands dramatically and summons an icewall to the (?&lt;exit&gt;\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Firewalled</name>
								<script>deleteLine()
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;ansiLightRed&gt; FIREWALL RAISED:&lt;white&gt; "..matches.exit:upper())
if (ra.IsLeader and ra.Settings.OverRide) or ra.IsLeader == "Me" then
send("pt Firewall raised: "..matches.exit:upper())
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#0000ff</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A firewall suddenly forms to the (?&lt;exit&gt;\w+)\.$</string>
									<string>^(\w+) raises (\w+) hands dramatically, and conjures a (\w+) to the (?&lt;exit&gt;\w+)\.$</string>
									<string>^You raise your hands dramatically, and conjure a firewall to the (?&lt;exit&gt;\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stonewalled</name>
								<script>cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;grey&gt; STONEWALL RAISED: &lt;white&gt;"..matches.exit:upper())
if (ra.IsLeader and ra.Settings.OverRide) or ra.IsLeader == "Me" then
send("pt Stonewall raised: "..matches.exit:upper())
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A wall of rough stone rises from the earth to block the exit to the (?&lt;exit&gt;\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Walls in the way</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Wall In the Way</name>
								<script>cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;yellow&gt; A WALL BLOCKED YOU!")
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;yellow&gt; A WALL BLOCKED YOU!")
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;yellow&gt; A WALL BLOCKED YOU!")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ffff0a</mFgColor>
								<mBgColor>#996633</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>A wall blocks your way.</string>
									<string>A wall bars your line of sight.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Wall blocked bomb</name>
								<script>cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;DarkGoldenRod&gt; A WALL DETONATED YOUR BOMB EARLY!")
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;DarkGoldenRod&gt; A WALL DETONATED YOUR BOMB EARLY!")
cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;DarkGoldenRod&gt; A WALL DETONATED YOUR BOMB EARLY!")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>5</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A (\w+) bomb gets caught upon the vicious thorns of the wall blocking the way, and with alarm you realise that you are now within the blast radius!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Icewall here</name>
								<script>cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;DeepSkyBlue&gt; Icewall: &lt;white&gt;"..matches.exit:upper())</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^An icewall is here, blocking passage to the (?&lt;exit&gt;\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Firewall here</name>
								<script>cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;ansiLightRed&gt; Firewall:&lt;white&gt; "..matches.exit:upper())</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A scorching wall of fire stands here, blocking passage to the (?&lt;exit&gt;\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Thornwall Here</name>
								<script>cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;ForestGreen&gt; Thornwall: &lt;white&gt;"..matches.exit:upper())</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A large wall of thorns stands here, barring passage to the (?&lt;exit&gt;\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Stonewall Here</name>
								<script>cecho("\n&lt;light_slate_blue&gt;[CombAtul] &lt;grey&gt; Stonewall: &lt;white&gt;"..matches.exit:upper())</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A large wall of stone stands here, blocking passage to the (?&lt;exit&gt;\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
</MudletPackage>
